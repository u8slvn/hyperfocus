name: ci
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.os }} - py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "windows", "macos"]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: curl -sSL https://install.python-poetry.org | python - -y

    - name: Update poetry path for Unix systems
      if: matrix.os != 'windows'
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Update poetry path for Windows
      if: matrix.os == 'windows'
      run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

    - name: Configure poetry
      run: poetry config virtualenvs.in-project true

    - name: Install dependencies
      shell: bash
      run: poetry install

    - name: Check quality
      run: |
        poetry run pre-commit run --all-files

    - name: Check tests
      run: |
        poetry run pytest tests/ --cov=src
        poetry run mypy

    - name: Publish coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pip install coveralls
        coveralls --service=github
      if: |
        matrix.os == 'ubuntu' &&
        matrix.python-version == '3.13' &&
        !startsWith(github.event.head_commit.message, 'docs')
